package gui;

import javax.swing.JOptionPane;
import java.io.*;
import java.text.SimpleDateFormat;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


/**
 *
 * @author jp
 */
public class return_book extends javax.swing.JFrame {

    /**
     * Creates new form return_book
     */
    public return_book() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    private boolean isBookIssuedToStudent(String bookId, String studentId) {
    File file = new File("records.txt");
    if (!file.exists()) return false;
    
    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] parts = line.split("\\|");
            if (parts.length >= 2 && 
                parts[0].trim().equals(bookId) && 
                parts[1].trim().equals(studentId)) {
                return true;
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error checking issued records");
    }
    return false;
}
    
    private void updateBookQuantity(String bookId) {
    File bookFile = new File("books.txt");
    File tempFile = new File("books_temp.txt");

    try (
        BufferedReader reader = new BufferedReader(new FileReader(bookFile));
        BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));
    ) {
        String line;

        while ((line = reader.readLine()) != null) {
            String[] parts = line.split("\\|");

            if (parts.length < 4) continue;

            String id = parts[0].trim();
            String name = parts[1].trim();
            String author = parts[2].trim();
            int quantity = Integer.parseInt(parts[3].trim());

            if (id.equals(bookId)) {
                quantity++;
            }

            writer.write(id + "|" + name + "|" + author + "|" + quantity);
            writer.newLine();
        }

        reader.close();
        writer.close();

        bookFile.delete();
        tempFile.renameTo(bookFile);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error updating book quantity: " + e.getMessage());
    }
}
    private boolean isValidDate(String date) {
    try {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        format.setLenient(false);
        format.parse(date);
        return true;
    } catch (Exception e) {
        return false;
    }
}  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField2.setText(" ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Book Id :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Student Id :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Return Date :");

        jTextField3.setText(" ");

        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButton1)
                        .addGap(51, 51, 51)
                        .addComponent(jButton2)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3))
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String bookId = jTextField1.getText().trim();
    String studentId = jTextField2.getText().trim();
    String returnDate = jTextField3.getText().trim();

    if (bookId.isEmpty() || studentId.isEmpty() || returnDate.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields required");
        return;
    }
    
    if (!isValidDate(returnDate)) {
        JOptionPane.showMessageDialog(this, "Invalid date format. Use yyyy-MM-dd");
        return;
    }
    
    if (!isBookIssuedToStudent(bookId, studentId)) {
        JOptionPane.showMessageDialog(this, "No record found of this book issued to this student");
        return;
    }
    

    File recordsFile = new File("records.txt");
    File recordsTemp = new File("records_temp.txt");

    boolean deletedOne = false;
    
    try (BufferedWriter recordsWriter = new BufferedWriter(new FileWriter("records.txt", true))) {
        recordsWriter.write(bookId + "|" + studentId + "|" + returnDate + "|RETURNED");
        recordsWriter.newLine();
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error updating records: " + e.getMessage());
    }
    
    try (
        BufferedReader reader = new BufferedReader(new FileReader(recordsFile));
        BufferedWriter writer = new BufferedWriter(new FileWriter(recordsTemp));
    ) {
        String line;

        while ((line = reader.readLine()) != null) {
            String[] parts = line.split("\\|");

            if (!deletedOne && parts.length >= 2 && parts[0].trim().equals(bookId) && parts[1].trim().equals(studentId)) {
                deletedOne = true;
                continue;
            }

            writer.write(line);
            writer.newLine();
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error reading records.txt: " + e.getMessage());
        return;
    }

    if (deletedOne) {
        recordsFile.delete();
        recordsTemp.renameTo(recordsFile);

        updateBookQuantity(bookId);
        JOptionPane.showMessageDialog(this, "Book returned");
    } else {
        recordsTemp.delete();
        JOptionPane.showMessageDialog(this, "Issued record not found");
    }
    
    }//GEN-LAST:event_jButton1ActionPerformed
  
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(return_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(return_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(return_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(return_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new return_book().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
